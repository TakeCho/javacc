/* Generated By:JavaCC: Do not edit this line. ComplParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ComplParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ADDOP = 6;
  /** RegularExpression Id. */
  int SUBOP = 7;
  /** RegularExpression Id. */
  int MULOP = 8;
  /** RegularExpression Id. */
  int DIVOP = 9;
  /** RegularExpression Id. */
  int ASGNOP = 10;
  /** RegularExpression Id. */
  int EQOP = 11;
  /** RegularExpression Id. */
  int GTOP = 12;
  /** RegularExpression Id. */
  int GEOP = 13;
  /** RegularExpression Id. */
  int LSOP = 14;
  /** RegularExpression Id. */
  int LEOP = 15;
  /** RegularExpression Id. */
  int NTOP = 16;
  /** RegularExpression Id. */
  int LC = 17;
  /** RegularExpression Id. */
  int RC = 18;
  /** RegularExpression Id. */
  int LP = 19;
  /** RegularExpression Id. */
  int RP = 20;
  /** RegularExpression Id. */
  int SM = 21;
  /** RegularExpression Id. */
  int CM = 22;
  /** RegularExpression Id. */
  int VAR = 23;
  /** RegularExpression Id. */
  int IF = 24;
  /** RegularExpression Id. */
  int ELSE = 25;
  /** RegularExpression Id. */
  int WHILE = 26;
  /** RegularExpression Id. */
  int PUT = 27;
  /** RegularExpression Id. */
  int GET = 28;
  /** RegularExpression Id. */
  int DIGIT = 29;
  /** RegularExpression Id. */
  int LETTER = 30;
  /** RegularExpression Id. */
  int LITERAL = 31;
  /** RegularExpression Id. */
  int IDENT = 32;
  /** RegularExpression Id. */
  int STRLIT = 34;
  /** RegularExpression Id. */
  int COMMENT = 39;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int STR = 1;
  /** Lexical state. */
  int COMM = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"==\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"!=\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\",\"",
    "\"var\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"put\"",
    "\"get\"",
    "<DIGIT>",
    "<LETTER>",
    "<LITERAL>",
    "<IDENT>",
    "\"\\\"\"",
    "<STRLIT>",
    "\"\\\\\\\"\"",
    "\"\\\\n\"",
    "<token of kind 37>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 40>",
    "<token of kind 41>",
  };

}
